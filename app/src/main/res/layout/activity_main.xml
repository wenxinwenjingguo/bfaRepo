<?xml version="1.0" encoding="utf-8"?>

<androidx.drawerlayout.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:pain="http://schemas.android.com/apk/res-auto"
    android:id="@+id/drawerLayout"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:fitsSystemWindows="true"
    tools:openDrawer="start">

    <!--主页内容-->
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:orientation="vertical"
        tools:context=".MainActivity">

        <!--顶部标题栏-->
        <androidx.appcompat.widget.Toolbar
            android:id="@+id/toolBar"
            android:layout_width="match_parent"
            android:layout_height="50dp"
            android:background="#00000000">
        </androidx.appcompat.widget.Toolbar>

        <RelativeLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            >
            <!--地图控件-->
            <com.baidu.mapapi.map.TextureMapView
                android:id="@+id/bmapView"
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:clickable="true" />
            <TextView
                android:id="@+id/locationInfo"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:visibility="visible"
                tools:visibility="gone" />

            <RelativeLayout
                android:layout_width="match_parent"
                android:layout_height="100dp"
                android:background="#00000000"
                android:layout_alignParentBottom="true">
                <!--button的位置由它的上级视图来决定-->
                <!--#00000000指透明-->

                <Button
                    android:id="@+id/jumpLogin"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_alignParentTop="true"
                    style="@style/button_style"
                    android:layout_marginLeft="120dp"
                    android:layout_marginRight="120dp"
                    android:text="登录"
                    android:textColor="#000000" />
            </RelativeLayout>

        </RelativeLayout>

    </LinearLayout>

    <!--侧边栏内容-->
    <com.google.android.material.navigation.NavigationView
        android:id="@+id/navigationView"
        android:layout_width="wrap_content"
        android:layout_height="match_parent"
        android:layout_gravity="start"
        app:headerLayout="@layout/navigationview_header"
        app:menu="@menu/menu_navigation">
    </com.google.android.material.navigation.NavigationView>

        <!--android:drawableBottom：在text的下方输出一个drawable，可以是图片，样式，颜色等。
         android:drawableLeft：在text的左边输出一个drawable，可以是图片，样式，颜色等。
         android:drawableRight：在text的右边输出一个drawable，可以是图片，样式，颜色等。
         android:drawableTop：在text的正上方输出一个drawable，可以是图片，样式，颜色等。
         android:drawableStart: 在text的开始处输出一个drawable，可以是图片，样式，颜色等。
         android:drawableEnd: 在text的结束处输出一个drawable，可以是图片，样式，颜色等。
         android:drawablePadding：设置text与drawable的间距，是与drawableLeft、 drawableRight、drawableTop、drawableBottom一起使用。
         从上面的代码可以看出有几个属性很相似。就是drawableStart和drawableLeft android:drawableRight和android:drawableEnd的区别。
         我们读一段文字，都是从左到右，于是对于我们来说start和left是一个概念。但是还有些文化，像阿拉伯等是从右到左的，这两者就截然相反了。
         用start、end代替left、right这是Android新提供的RTL Layout Support所推荐的做法。-->


</androidx.drawerlayout.widget.DrawerLayout>


